#!/bin/bash

# Author : Scourge
# email  : Scourge@protonmail.com
# Licence: GPLv3

if [ -z "$1" ] || [ "$1" = "-u" ] || [ "$1" = "-a" ] || [ "$1" = "-d" ] || [ "$1" = "-l" ] || [ "$1" = "-o" ] || [ "$1" = "-rb" ] || [ "$1" = "-b" ]  || [ "$1" = "-ln" ]; then
	echo ""
	echo "sys.argv[1] = file to get hex dump from"
	echo ""
	echo "Options as follows . . ."
	echo "Default = -u & -a"
	echo ""
	echo "-d = output shellcode disassembly if sys.argv[2]"
	echo ""
	echo "-l or -o  or -u = get shellcode for unix nasm"
	echo "-w = get shellcode for windows nasm"
	echo ""
	echo "-a  = display all hex"
	echo "-rb = ruby format"
	echo "-b  = display hex block without the extra content"
	echo "-ln = display hex in line format"
	echo ""
	exit
fi

if [ "$2" = "-d" ]; then
	if [ "$3" = "-w" ]; then
		wine objdump -d $1.obj -M intel | support_esc.rb -d
	else
		objdump -d $1 -M intel | support_esc.rb -d
	fi
	exit
fi 



if [ -z "$2" ] || [ -z "$3" ] || [ "$3" = "-o" ] || [ "$3" = "-l" ] || [ "$2" = "-o" ] || [ "$2" = "-l" ] || [ "$2" = "-u" ] || [ "$3" = "-u" ]; then
	start=$(objdump -d $1 -M intel | support_esc.rb)
elif [ "$3" = "-w" ] || [ "$2" = "-w" ]; then
	start=$(wine objdump -d $1.obj -M intel | support_esc.rb)
else
	start=$(objdump -d $1 -M intel | support_esc.rb)
fi
single_line="$(echo $start |tr -d " " )" 
block=$(echo  "${single_line}" | sed "s/.\{1,64\}/\"&\"\n/g")

ruby_block=$(echo '')
quote_block=$(echo "${block}" | sed 's/^.\{1,\}$/&/')

ruby_block_tmp=$(echo '')


for line in $quote_block; do
	dlength=${#line}
	dint=$(echo 66)
	if [ $dlength -eq $dint ]; then
		ruby_block=$(echo "${ruby_block}${line} + ")
	else
		ruby_block=$(echo "${ruby_block}${line}")
	fi	
done
echo -ne "\n"
ruby_block2="$(echo $ruby_block |tr -d " " )" # join spaces of array
ruby_block=$(echo  "${ruby_block2}" | sed "s/+/ + \n/g")



if [ "$2" = "-ln" ] || [ "$3" = "-ln" ]; then
	single_line=$(echo "${single_line}" | sed 's/^.\{1,\}$/"&"/')
	echo "${single_line}"
	echo "${single_line}" | xsel -b
elif [ "$2" = "-b" ] || [ "$3" = "-b" ]; then
	echo "${quote_block}"
	echo "${quote_block}" | xsel -b
elif [ "$2" = "-rb" ] || [ "$3" = "-rb" ]; then
	echo "${ruby_block}"
	echo "${ruby_block}" | xsel -b
elif [ "$2" = "-a" ] || [ -z "$2" ] || [ $3 = "-a" ] || [ -z "$3" ]; then
	green='\033[1;32m'  
	yellow='\033[1;33m'
	white='\033[1;37m'
	red='\033[1;31m'
	echo
	printf ${green}
	echo ===================================================================
	echo
	printf ${yellow}

	echo "${quote_block}" | xsel -b

	Dcode=$(echo "${quote_block}")
	DcodeCount=$(echo "${quote_block}" | grep -o x | wc -l)

	hex=$(printf "%x" $DcodeCount)
	hexPlus=$(echo "0x$hex")


	echo "${block}"
	echo
	if echo "${block}" | grep -o '.....$' | grep 00 > /dev/null ; then
		null=$(echo "Trailing Null Found  --- Hex --------->      $hexPlus" ; printf ${green})
	
	elif echo "${block}" | grep 00 > /dev/null  ; then
		null=$(printf ${red}; echo "Nulls Found   ---------- Hex ---------> $hexPlus" ; printf ${green})
	
	else
		null=$(echo "No Nulls Found     ----- Hex ---------> $hexPlus" )
	
	fi

	printf ${green} 
	echo ===================================================================
	echo
	echo "Scourge Byte Count ----- Decimal -----> $DcodeCount"
	echo "$null 	   " 
	echo 
	echo ===================================================================
	echo
	printf ${white}
else
	true == true 
fi
















